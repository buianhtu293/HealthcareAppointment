// <auto-generated />
using System;
using HealthcareAppointment.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthcareAppointment.Data.Data.Migrations
{
    [DbContext(typeof(HealthcareDbContext))]
    [Migration("20241011071609_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthcareAppointment.Models.Models.Domain.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments", (string)null);
                });

            modelBuilder.Entity("HealthcareAppointment.Models.Models.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("HealthcareAppointment.Models.Models.Domain.Appointment", b =>
                {
                    b.HasOne("HealthcareAppointment.Models.Models.Domain.User", "DoctorUser")
                        .WithMany("AppointmentDoctors")
                        .HasForeignKey("DoctorId")
                        .IsRequired();

                    b.HasOne("HealthcareAppointment.Models.Models.Domain.User", "PatientUser")
                        .WithMany("AppointmentPatients")
                        .HasForeignKey("PatientId")
                        .IsRequired();

                    b.Navigation("DoctorUser");

                    b.Navigation("PatientUser");
                });

            modelBuilder.Entity("HealthcareAppointment.Models.Models.Domain.User", b =>
                {
                    b.Navigation("AppointmentDoctors");

                    b.Navigation("AppointmentPatients");
                });
#pragma warning restore 612, 618
        }
    }
}
